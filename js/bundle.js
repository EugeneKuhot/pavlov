'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

'use strict';

(function () {

  const aboutUsBlock = document.querySelector('.about-us');
  const workersBlock = document.querySelector('.workers');
  const servicesBlock = document.querySelector('.services');
  const portfolioBlock = document.querySelector('.portfolio');
  const contactBlock = document.querySelector('.contact');

  const allBlocksForAnimation = [aboutUsBlock, workersBlock, servicesBlock, portfolioBlock, contactBlock];

  var options = {
    threshold: .4
  };

  if (document.documentElement.clientWidth < 768) {
    var options = {
      threshold: .1
    };
  }

  function aboutUsAnimation(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const el = entry.target;
        el.classList.add('animated');
      }
    });
  }

  const observer = new IntersectionObserver(aboutUsAnimation, options);

  allBlocksForAnimation.forEach(block => observer.observe(block));

})();

(()=>{"use strict";!function(){const e=document.querySelector(".greetings__text"),t=document.querySelector(".greetings__title"),o=document.querySelector(".greetings__start-btn"),c=document.querySelector(".greetings__desc-block"),s=document.querySelector(".header"),n=document.querySelector(".greetings__mobile-list");function r(){e.classList.add("onload"),c.classList.add("onload"),setTimeout((function(){t.classList.add("onload")}),300),setTimeout((function(){n.classList.add("onload")}),450),setTimeout((function(){o.classList.add("onload")}),600)}window.addEventListener("load",(function(){s.classList.add("onload"),setTimeout(r,500)}))}(),function(){const e=document.querySelector("#popup-form"),t=document.querySelector("#contact-form"),o=e.querySelector("#modal-contact-file"),c=e.querySelector(".contact-form__file-label span"),s=t.querySelector("#contact-file"),n=t.querySelector(".contact-form__file-label span");function r(e,t){t.textContent=e.value.replace("C:\\fakepath\\","")}o.addEventListener("change",(function(){r(o,c)})),s.addEventListener("change",(function(){r(s,n)}))}(),function(){const e=document.querySelector(".contact-form__wrap"),t=document.querySelector(".header__start-btn"),o=document.querySelector(".greetings__start-btn"),c=e.querySelector(".close-btn");function s(){e.classList.add("opened-form")}t.addEventListener("click",s),o.addEventListener("click",s),c.addEventListener("click",(function(){e.classList.remove("opened-form")})),window.openForm={getFormPopup:s,formWrap:e}}(),function(){const e=document.querySelector(".js-poland-btn"),t=document.querySelector(".js-ukraine-btn"),o=document.querySelector(".js-poland-phone"),c=document.querySelector(".js-ukraine-phone");e.addEventListener("click",(function(){e.classList.add("active"),t.classList.remove("active"),o.style="display: block;",c.style="display: none;"})),t.addEventListener("click",(function(){e.classList.remove("active"),t.classList.add("active"),o.style="display: none;",c.style="display: block;"}))}(),function(){const e=document.querySelector(".workers"),t=e.querySelectorAll(".workers__tabs-item button"),o=[document.querySelector(".js-project-wrap"),document.querySelector(".js-developing-wrap"),document.querySelector(".js-support-wrap")];t.forEach((e=>e.addEventListener("click",(function(){var c;c=e,t.forEach((e=>e.classList.remove("active"))),c.classList.add("active"),function(){t.forEach((e=>e.setAttribute("disabled","true")));for(let e=0;e<o.length;e++)t[e].classList.contains("active")&&(o.forEach((function(e){e.classList.contains("add-worker")&&(e.classList.remove("add-worker"),e.classList.add("remove-worker")),e.classList.contains("remove-worker")&&e.classList.remove("remove-worker")})),o[e].classList.add("add-worker"),t.forEach((e=>e.removeAttribute("disabled","true"))))}()}))));const c=e.querySelector(".js-webdesigner-btn"),s=e.querySelector(".js-graphdesigner-btn"),n=e.querySelector(".js-webdesign"),r=e.querySelector(".js-graphdesign");function i(e,t){n.classList.add("hidden"),r.classList.add("hidden"),c.classList.remove("active"),s.classList.remove("active"),e.classList.remove("hidden"),t.classList.add("active")}c.addEventListener("click",(function(){i(n,c)})),s.addEventListener("click",(function(){i(r,s)}))}(),function(){let e=document.querySelector(".services"),t=e.querySelectorAll(".services__tabs-item button"),o=[document.querySelector(".services__webpages-wrap"),document.querySelector(".services__design-wrap"),document.querySelector(".services__copywrite-wrap")];t.forEach((e=>e.addEventListener("click",(function(){var c;c=e,t.forEach((e=>e.classList.remove("active"))),c.classList.add("active"),function(){for(let e=0;e<o.length;e++)t[e].classList.contains("active")&&(o.forEach((e=>e.classList.remove("active"))),o.forEach((e=>e.classList.remove("slide-in-blurred-bottom"))),o[e].classList.add("active"),o[e].classList.add("slide-in-blurred-bottom"),o[e].querySelectorAll("button").forEach((e=>e.classList.remove("active"))),o[e].querySelector("button").classList.add("active"))}()}))));let c=e.querySelectorAll(".services__service-list button");c.forEach((t=>t.addEventListener("click",(function(){var o;!function(t){if(!t.classList.contains("active")){let o=t.parentElement.parentElement.parentElement.querySelectorAll(".services__tab-desc");o.forEach((e=>e.classList.add("hidden"))),o.forEach((e=>e.classList.remove("slide-in-blurred-bottom")));let c=t.classList+"-block",s=e.querySelector("."+c);s.classList.remove("hidden"),s.classList.add("slide-in-blurred-bottom")}}(t),o=t,c.forEach((e=>e.classList.remove("active"))),o.classList.add("active")}))))}(),function(){const e=[document.querySelector(".about-us"),document.querySelector(".workers"),document.querySelector(".services"),document.querySelector(".portfolio"),document.querySelector(".contact")];var t={threshold:.4};document.documentElement.clientWidth<768&&(t={threshold:.1});const o=new IntersectionObserver((function(e,t){e.forEach((e=>{e.isIntersecting&&e.target.classList.add("animated")}))}),t);e.forEach((e=>o.observe(e)))}(),function(e,t){let o=document.querySelector(".slider"),c=o.querySelector(".slider__wrapper"),s=o.querySelectorAll(".slider__item"),n=o.querySelectorAll(".slider__control"),r=o.querySelector(".slider__control_left"),i=o.querySelector(".slider__control_right"),l=parseFloat(getComputedStyle(c).width),a=parseFloat(getComputedStyle(s[0]).width),d=0,u=0,m=a/l*100,f=[];s.forEach((function(e,t){f.push({item:e,position:t,transform:0})}));let v=f.length-1,L=function(e){if(e.target.classList.contains("slider__control")){e.preventDefault(),function(e){if("right"===e){if(d+l/a-1>=v)return;r.classList.contains("slider__control_show")||r.classList.add("slider__control_show"),i.classList.contains("slider__control_show")&&d+l/a>=v&&i.classList.remove("slider__control_show"),d++,u-=m}if("left"===e){if(d<=0)return;i.classList.contains("slider__control_show")||i.classList.add("slider__control_show"),r.classList.contains("slider__control_show")&&d-1<=0&&r.classList.remove("slider__control_show"),d--,u+=m}c.style.transform="translateX("+u+"%)"}(e.target.classList.contains("slider__control_right")?"right":"left")}};n.forEach((function(e){e.addEventListener("click",L)}))}(),function(){const e=window.openForm.formWrap.querySelector(".contact-form"),t=e.querySelector("#modal-contact-policy"),o=e.querySelector("#modal-name"),c=e.querySelector("#modal-email"),s=e.querySelector("#modal-phone"),n=document.querySelector(".contact-form"),r=n.querySelector("#contact-policy"),i=n.querySelector("#name"),l=n.querySelector("#email"),a=n.querySelector("#phone");function d(e){e.classList.add("invalid"),e.classList.remove("valid")}function u(e){e.classList.add("valid"),e.classList.remove("invalid")}function m(e){/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e.value.trim())?u(e):d(e)}function f(e){e.forEach((function(e){""===e.value.trim()?d(e):u(e)}))}function v([e,t,o]){return[e,t,o].every((e=>e.classList.contains("valid")))}i.addEventListener("change",(function(){u(i)})),l.addEventListener("change",(function(){m(l)})),a.addEventListener("change",(function(){u(a)})),o.addEventListener("change",(function(){u(o)})),c.addEventListener("change",(function(){m(c)})),s.addEventListener("change",(function(){m(s)})),n.addEventListener("submit",(function(e){e.preventDefault(),f([i,l,a]),m(l),r.checked?v([i,l,a])&&n.submit():n.querySelector(".contact-form__label").classList.add("invalid")})),e.addEventListener("submit",(function(n){n.preventDefault(),f([o,c,s]),m(c),t.checked?v([o,c,s])&&e.submit():e.querySelector(".contact-form__label").classList.add("invalid")}))}(),function(){const e=document.querySelector(".burger-btn"),t=e.querySelector("svg"),o=document.querySelector(".header__burger-wrap");e.addEventListener("click",(function(){t.classList.toggle("active"),o.classList.toggle("slide-in-left"),o.classList.toggle("slide-out-left")}))}(),function(){const e=document.querySelector(".backToTop");window.addEventListener("scroll",(function(){let t=window.pageYOffset,o=document.documentElement.clientHeight;t>o&&e.classList.add("backToTop-show"),t<o&&e.classList.remove("backToTop-show")})),e.addEventListener("click",(function(){window.scrollTo(0,0)}))}()})();
'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();

'use strict';

(function () {

  const polandBtn = document.querySelector(`.js-poland-btn`);
  const ukraineBtn = document.querySelector(`.js-ukraine-btn`);
  const polandPhone = document.querySelector(`.js-poland-phone`);
  const ukrainePhone = document.querySelector(`.js-ukraine-phone`);

  function getPolishPhone() {
    polandBtn.classList.add(`active`);
    ukraineBtn.classList.remove(`active`);

    polandPhone.style = `display: block;`;
    ukrainePhone.style = `display: none;`;
  }

  function getUkrPhone() {
    polandBtn.classList.remove(`active`);
    ukraineBtn.classList.add(`active`);

    polandPhone.style = `display: none;`;
    ukrainePhone.style = `display: block;`;
  }

  polandBtn.addEventListener(`click`, getPolishPhone);
  ukraineBtn.addEventListener(`click`, getUkrPhone);
})();

'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map

'use strict';

(function () {
  const burgerBtn = document.querySelector(`.burger-btn`);
  const burgerIcon = burgerBtn.querySelector(`svg`);
  const burgerMenu = document.querySelector(`.header__burger-wrap`);

  function changeIcon() {
    burgerIcon.classList.toggle('active');
  }

  function toggleMenu() {
    burgerMenu.classList.toggle('slide-in-left');
    burgerMenu.classList.toggle('slide-out-left');
  }

  function toggleBurger() {
    changeIcon();
    toggleMenu();
  }

  burgerBtn.addEventListener(`click`, toggleBurger)

})();



'use strict';

(function () {

  const popupForm = document.querySelector(`#popup-form`);
  const contactForm = document.querySelector(`#contact-form`);

  const formFile = popupForm.querySelector(`#modal-contact-file`);
  const fileLabel = popupForm.querySelector(`.contact-form__file-label span`);
  const contactFormFile = contactForm.querySelector(`#contact-file`);
  const contactFileLabel = contactForm.querySelector(`.contact-form__file-label span`);


  function fileChangeHandler(input, label) {
    label.textContent = input.value.replace(`C:\\fakepath\\`, '');
  }

  formFile.addEventListener(`change`, function() {
    fileChangeHandler(formFile, fileLabel);
  });

  contactFormFile.addEventListener(`change`, function() {
    fileChangeHandler(contactFormFile, contactFileLabel);
  });

})();

'use strict';

(function () {
  const modalForm = window.openForm.formWrap.querySelector('.contact-form');
  const modalFormCheck = modalForm.querySelector('#modal-contact-policy');
  const modalUserName = modalForm.querySelector('#modal-name');
  const modalEmail = modalForm.querySelector('#modal-email');
  const modalPhone = modalForm.querySelector('#modal-phone');

  const contactForm = document.querySelector('.contact-form');
  const contactFormCheck = contactForm.querySelector('#contact-policy');
  const username = contactForm.querySelector('#name');
  const email = contactForm.querySelector('#email');
  const phone = contactForm.querySelector('#phone');

  username.addEventListener('change', function () {
    showSuccess(username);
  });
  email.addEventListener('change', function () {
    checkEmail(email);
  });
  phone.addEventListener('change', function () {
    showSuccess(phone);
  });

  modalUserName.addEventListener('change', function () {
    showSuccess(modalUserName);
  });
  modalEmail.addEventListener('change', function () {
    checkEmail(modalEmail);
  });
  modalPhone.addEventListener('change', function () {
    checkEmail(modalPhone);
  });

  function showError(input) {
    input.classList.add('invalid');
    input.classList.remove('valid');
  }
  function showSuccess(input) {
    input.classList.add('valid');
    input.classList.remove('invalid');
  }
  function checkEmail(input) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if(re.test(input.value.trim())) {
      showSuccess(input)
    }else {
      showError(input);
    }
  }
  function checkRequired(inputArr) {
    inputArr.forEach(function(input){
      if(input.value.trim() === ''){
        showError(input)
      }else {
        showSuccess(input);
      }
    });
  }

  function checkValidityForm([username, email, phone]) {
    return [username, email, phone].every( el => el.classList.contains('valid'));
  }

  contactForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([username, email, phone]);
    checkEmail(email);

    if (contactFormCheck.checked) {
      if (checkValidityForm([username, email, phone])) {
        contactForm.submit();
      }
    } else {
      let checkLabel = contactForm.querySelector('.contact-form__label');
      checkLabel.classList.add('invalid');
    }

  });

  modalForm.addEventListener('submit',function(e) {
    e.preventDefault();
    checkRequired([modalUserName, modalEmail, modalPhone]);
    checkEmail(modalEmail);

    if (modalFormCheck.checked) {
      if (checkValidityForm([modalUserName, modalEmail, modalPhone])) {
        modalForm.submit();
      }
    } else {
      let modalCheckLabel = modalForm.querySelector('.contact-form__label');
      modalCheckLabel.classList.add('invalid');
    }

  });
})();

'use strict';

(function () {
  const goTopBtn = document.querySelector('.backToTop');

  function trackScroll () {
    let scrolled = window.pageYOffset;
    let coords = document.documentElement.clientHeight;

    if (scrolled > coords) {
      goTopBtn.classList.add('backToTop-show');
    }
    if (scrolled < coords) {
      goTopBtn.classList.remove('backToTop-show');
    }
  }

  function backToTop () {
    window.scrollTo(0, 0);
  }

  window.addEventListener('scroll', trackScroll);
  goTopBtn.addEventListener('click', backToTop);
})();

'use strict';

(function () {

  //const greetingsText = document.querySelector(`.greetings__text`);
  const greetingsTitle = document.querySelector(`.greetings__title`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const greetingsTextBlock = document.querySelector(`.greetings__desc-block`);
  const header = document.querySelector(`.header`);
  const mobileGreetingsList = document.querySelector(`.greetings__mobile-list`);

  function headerOnloadAnimation() {
    header.classList.add('onload');
  }
  function greetingsTextBlockAnimate() {
    //greetingsText.classList.add('onload');
    greetingsTextBlock.classList.add('onload');

    setTimeout(function() {
      greetingsTitle.classList.add('onload');
    }, 300);

    setTimeout(function() {
      mobileGreetingsList.classList.add('onload');
    }, 450);

    setTimeout(function() {
      greetingsStartBtn.classList.add('onload');
    }, 600);
  }

  function onloadAnimation() {
    headerOnloadAnimation();
    setTimeout(greetingsTextBlockAnimate, 500);
  }

  window.addEventListener(`load`, onloadAnimation);
})();

'use strict';

(function () {

  const formWrap = document.querySelector(`.contact-form__wrap`);
  const headerStartBtn = document.querySelector(`.header__start-btn`);
  const greetingsStartBtn = document.querySelector(`.greetings__start-btn`);
  const formCloseBtn = formWrap.querySelector(`.close-btn`);

  function getFormPopup() {
    formWrap.classList.add(`opened-form`);
  }
  function removeFormPopup() {
    formWrap.classList.remove(`opened-form`);
  }

  headerStartBtn.addEventListener(`click`, getFormPopup);
  greetingsStartBtn.addEventListener(`click`, getFormPopup);
  formCloseBtn.addEventListener(`click`, removeFormPopup);

  window.openForm = {
    getFormPopup,
    formWrap
  }
})();

'use strict';

(function () {
  let tabsBlock = document.querySelector('.services');
  let tabItems = tabsBlock.querySelectorAll('.services__tabs-item button');

  let webPagesWrap = document.querySelector('.services__webpages-wrap');
  let designWrap = document.querySelector('.services__design-wrap');
  let copywriteWrap = document.querySelector('.services__copywrite-wrap');

  let wraps = [webPagesWrap, designWrap, copywriteWrap];

  function getActiveTabItem (item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getActiveServiceList () {
    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(el => el.classList.remove('active'));
        wraps.forEach(el => el.classList.remove('slide-in-blurred-bottom'));
        wraps[i].classList.add('active');
        wraps[i].classList.add('slide-in-blurred-bottom');
        wraps[i].querySelectorAll('button').forEach(el => el.classList.remove('active'));
        wraps[i].querySelector('button').classList.add('active');
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getActiveServiceList();
  }));

  let allServiceBtns = tabsBlock.querySelectorAll('.services__service-list button');

  function getActiveServiceBtn (item) {
    allServiceBtns.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  function getServiceDescription(el) {
    if (!el.classList.contains('active')) {
      let allDescriptions = el.parentElement.parentElement.parentElement.querySelectorAll('.services__tab-desc');
      allDescriptions.forEach(desc => desc.classList.add('hidden'));
      allDescriptions.forEach(desc => desc.classList.remove('slide-in-blurred-bottom'));
      let descWrapClass = el.classList + '-block';
      let descWrap = tabsBlock.querySelector(`.${descWrapClass}`);
      descWrap.classList.remove('hidden');
      descWrap.classList.add('slide-in-blurred-bottom');
    }
  }

  allServiceBtns.forEach(el => el.addEventListener('click', function () {
    getServiceDescription(el);
    getActiveServiceBtn(el);
  }));

})();

'use strict';
(function () {
  let multiItemSlider = (function () {
    return function (selector, config) {
      let
        _mainElement = document.querySelector(selector),
        _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),
        _sliderItems = _mainElement.querySelectorAll('.slider__item'),
        _sliderControls = _mainElement.querySelectorAll('.slider__control'),
        _sliderControlLeft = _mainElement.querySelector('.slider__control_left'),
        _sliderControlRight = _mainElement.querySelector('.slider__control_right'),
        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),
        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),
        _positionLeftItem = 0,
        _transform = 0,
        _step = _itemWidth / _wrapperWidth * 100,
        _items = [];

      _sliderItems.forEach(function (item, index) {
        _items.push({item: item, position: index, transform: 0});
      });

      let position = {
        getMin: 0,
        getMax: _items.length - 1,
      }

      let _transformItem = function (direction) {
        if (direction === 'right') {
          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) >= position.getMax) {
            return;
          }
          if (!_sliderControlLeft.classList.contains('slider__control_show')) {
            _sliderControlLeft.classList.add('slider__control_show');
          }
          if (_sliderControlRight.classList.contains('slider__control_show') && (_positionLeftItem + _wrapperWidth / _itemWidth) >= position.getMax) {
            _sliderControlRight.classList.remove('slider__control_show');
          }
          _positionLeftItem++;
          _transform -= _step;
        }
        if (direction === 'left') {
          if (_positionLeftItem <= position.getMin) {
            return;
          }
          if (!_sliderControlRight.classList.contains('slider__control_show')) {
            _sliderControlRight.classList.add('slider__control_show');
          }
          if (_sliderControlLeft.classList.contains('slider__control_show') && _positionLeftItem - 1 <= position.getMin) {
            _sliderControlLeft.classList.remove('slider__control_show');
          }
          _positionLeftItem--;
          _transform += _step;
        }
        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';
      }

      let _controlClick = function (e) {
        if (e.target.classList.contains('slider__control')) {
          e.preventDefault();
          let direction = e.target.classList.contains('slider__control_right') ? 'right' : 'left';
          _transformItem(direction);
        }
      };

      let _setUpListeners = function () {
        _sliderControls.forEach(function (item) {
          item.addEventListener('click', _controlClick);
        });
      }
      _setUpListeners();

      return {
        right: function () {
          _transformItem('right');
        },
        left: function () {
          _transformItem('left');
        }
      }

    }
  }());

  let slider = multiItemSlider('.slider');

})();

'use strict';

(function () {

  const tabsBlock = document.querySelector('.workers');
  const tabItems = tabsBlock.querySelectorAll('.workers__tabs-item button');

  function getActiveTabItem(item) {
    tabItems.forEach(el => el.classList.remove('active'));
    item.classList.add('active');
  }

  const projectBlock = document.querySelector('.js-project-wrap');
  const developingBlock = document.querySelector('.js-developing-wrap');
  const supportBlock = document.querySelector('.js-support-wrap');
  const wraps = [projectBlock, developingBlock, supportBlock];

  function getWorker() {
    tabItems.forEach(el => el.setAttribute('disabled', 'true'));

    for (let i = 0; i < wraps.length; i++) {
      if (tabItems[i].classList.contains('active')) {
        wraps.forEach(function (el) {
          if (el.classList.contains('add-worker')) {
            el.classList.remove('add-worker');
            el.classList.add('remove-worker');
          }
          if (el.classList.contains('remove-worker')) {
            el.classList.remove('remove-worker');
          }
        });

        wraps[i].classList.add('add-worker');
        tabItems.forEach(el => el.removeAttribute('disabled', 'true'));
      }
    }
  }

  tabItems.forEach(el => el.addEventListener('click', function () {
    getActiveTabItem(el);
    getWorker();
  }));

  const webDesignBtn = tabsBlock.querySelector('.js-webdesigner-btn');
  const graphDesignBtn = tabsBlock.querySelector('.js-graphdesigner-btn');
  const webDesignWrap = tabsBlock.querySelector('.js-webdesign');
  const graphDesignWrap = tabsBlock.querySelector('.js-graphdesign');

  function getDesigner(wrap, btn) {
    webDesignWrap.classList.add('hidden');
    graphDesignWrap.classList.add('hidden');
    webDesignBtn.classList.remove('active');
    graphDesignBtn.classList.remove('active');

    wrap.classList.remove('hidden');
    btn.classList.add('active');
  }

  webDesignBtn.addEventListener('click', function () {
    getDesigner(webDesignWrap, webDesignBtn);
  });
  graphDesignBtn.addEventListener('click', function () {
    getDesigner(graphDesignWrap, graphDesignBtn);
  });

})();

//# sourceMappingURL=bundle.js.map
